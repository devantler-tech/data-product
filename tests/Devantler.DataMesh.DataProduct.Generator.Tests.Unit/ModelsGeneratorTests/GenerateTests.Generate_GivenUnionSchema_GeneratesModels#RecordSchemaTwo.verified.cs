//HintName: RecordSchemaTwo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Devantler.DataMesh.DataProduct.Models {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using global::Avro;
    using global::Avro.Specific;
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("testhost", "1.11.1")]
    public partial class RecordSchemaTwo : global::Avro.Specific.ISpecificRecord {
        public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""RecordSchemaTwo"",""namespace"":""Devantler.DataMesh.DataProduct.Models"",""fields"":[{""name"":""Id"",""type"":""string""},{""name"":""BooleanType"",""type"":""boolean""},{""name"":""ByteType"",""type"":""bytes""},{""name"":""DoubleType"",""type"":""double""},{""name"":""FloatType"",""type"":""float""},{""name"":""IntType"",""type"":""int""},{""name"":""LongType"",""type"":""long""},{""name"":""StringType"",""type"":""string""}]}");
        private string _Id;
        private bool _BooleanType;
        private byte[] _ByteType;
        private double _DoubleType;
        private float _FloatType;
        private int _IntType;
        private long _LongType;
        private string _StringType;
        public virtual global::Avro.Schema Schema {
            get {
                return RecordSchemaTwo._SCHEMA;
            }
        }
        public string Id {
            get {
                return this._Id;
            }
            set {
                this._Id = value;
            }
        }
        public bool BooleanType {
            get {
                return this._BooleanType;
            }
            set {
                this._BooleanType = value;
            }
        }
        public byte[] ByteType {
            get {
                return this._ByteType;
            }
            set {
                this._ByteType = value;
            }
        }
        public double DoubleType {
            get {
                return this._DoubleType;
            }
            set {
                this._DoubleType = value;
            }
        }
        public float FloatType {
            get {
                return this._FloatType;
            }
            set {
                this._FloatType = value;
            }
        }
        public int IntType {
            get {
                return this._IntType;
            }
            set {
                this._IntType = value;
            }
        }
        public long LongType {
            get {
                return this._LongType;
            }
            set {
                this._LongType = value;
            }
        }
        public string StringType {
            get {
                return this._StringType;
            }
            set {
                this._StringType = value;
            }
        }
        public virtual object Get(int fieldPos) {
            switch (fieldPos)
			{
			case 0: return this.Id;
			case 1: return this.BooleanType;
			case 2: return this.ByteType;
			case 3: return this.DoubleType;
			case 4: return this.FloatType;
			case 5: return this.IntType;
			case 6: return this.LongType;
			case 7: return this.StringType;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
        }
        public virtual void Put(int fieldPos, object fieldValue) {
            switch (fieldPos)
			{
			case 0: this.Id = (System.String)fieldValue; break;
			case 1: this.BooleanType = (System.Boolean)fieldValue; break;
			case 2: this.ByteType = (System.Byte[])fieldValue; break;
			case 3: this.DoubleType = (System.Double)fieldValue; break;
			case 4: this.FloatType = (System.Single)fieldValue; break;
			case 5: this.IntType = (System.Int32)fieldValue; break;
			case 6: this.LongType = (System.Int64)fieldValue; break;
			case 7: this.StringType = (System.String)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
        }
    }
}
