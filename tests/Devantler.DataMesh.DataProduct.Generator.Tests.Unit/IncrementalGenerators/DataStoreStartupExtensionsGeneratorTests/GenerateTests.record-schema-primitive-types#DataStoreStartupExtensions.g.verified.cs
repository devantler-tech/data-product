//HintName: DataStoreStartupExtensions.g.cs
// <auto-generated>
// This code was generated by: 'Devantler.DataMesh.DataProduct.Generator.IncrementalGenerators.DataStoreStartupExtensionsGenerator'.
// Any changes made to this file will be overwritten.
using Devantler.DataMesh.DataProduct.Configuration.Options.DataStoreOptions;
using Devantler.DataMesh.DataProduct.DataStore.Services;
using Devantler.DataMesh.DataProduct.DataStore.Repositories;
using Devantler.DataMesh.DataProduct.DataStore.Entities;
using Devantler.DataMesh.DataProduct.Models;
using Microsoft.EntityFrameworkCore;
namespace Devantler.DataMesh.DataProduct.DataStore;
public static partial class DataStoreStartupExtensions
{
    static partial void AddGeneratedServiceRegistrations(this IServiceCollection services, IDataStoreOptions? options)
    {
        _ = services.AddPooledDbContextFactory<SqliteDbContext>(dbOptions => dbOptions.UseLazyLoadingProxies().UseSqlite(options?.ConnectionString));
        _ = services.AddScoped<IRepository<RecordSchemaPrimitiveTypesEntity>, RecordSchemaPrimitiveTypesRepository>();
        _ = services.AddScoped<IDataStoreService<RecordSchemaPrimitiveTypes>, RecordSchemaPrimitiveTypesDataStoreService>();
    }
    static partial void UseGeneratedServiceRegistrations(this WebApplication app, IDataStoreOptions? options)
    {
        using var scope = app.Services.CreateScope();
        var services = scope.ServiceProvider;
        var dbContextFactory = services.GetRequiredService<IDbContextFactory<SqliteDbContext>>();
        using var context = dbContextFactory.CreateDbContext();
        _ = context.Database.EnsureCreated();
    }
}
