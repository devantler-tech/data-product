@using Microsoft.Extensions.Options;
@using Devantler.DataMesh.DataProduct.Configuration.Options;
@using Devantler.DataMesh.SchemaRegistryClient;
@using Devantler.Commons.CodeGen.Mapping.Avro;
@using Chr.Avro.Abstract;

@inject IOptions<DataProductOptions> Options
@inject ISchemaRegistryService SchemaRegistryService

<Card Background="Background.Light" Margin=Margin.Is4.FromBottom>
    <CardBody>
        <CardTitle Size="3">
            Schema
        </CardTitle>
        <CardText>
            @if (_schemas.Any())
            {
                @foreach (var schema in _schemas)
                {
                    <SchemaCard Schema="@schema" />
                }
            }
            else
            {
                <p>Loading...</p>
            }
        </CardText>
    </CardBody>
</Card>

@code {
    private List<RecordSchema> _schemas = new();

    protected override async Task OnInitializedAsync()
    {
        var rootSchema = await SchemaRegistryService.GetSchemaAsync(Options.Value.SchemaRegistry.Schema.Subject,
        Options.Value.SchemaRegistry.Schema.Version);
        var schemas = rootSchema.Flatten().FindAll(s => s is RecordSchema).Cast<RecordSchema>();
        _schemas = schemas.ToList();
    }
}