//HintName: RecordSchemaTwoWithReference.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Devantler.DataMesh.DataProduct.Models {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using global::Avro;
    using global::Avro.Specific;
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("testhost", "1.11.1")]
    public partial class RecordSchemaTwoWithReference : global::Avro.Specific.ISpecificRecord {
        public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""RecordSchemaTwoWithReference"",""namespace"":""Devantler.DataMesh.DataProduct.Models"",""fields"":[{""name"":""Id"",""type"":""string""},{""name"":""RecordSchemaOne"",""type"":{""type"":""record"",""name"":""RecordSchemaOneWithoutReference"",""namespace"":""Devantler.DataMesh.DataProduct.Models"",""fields"":[{""name"":""Id"",""type"":""string""}]}}]}");
        private string _Id;
        private Devantler.DataMesh.DataProduct.Models.RecordSchemaOneWithoutReference _RecordSchemaOne;
        public virtual global::Avro.Schema Schema {
            get {
                return RecordSchemaTwoWithReference._SCHEMA;
            }
        }
        public string Id {
            get {
                return this._Id;
            }
            set {
                this._Id = value;
            }
        }
        public Devantler.DataMesh.DataProduct.Models.RecordSchemaOneWithoutReference RecordSchemaOne {
            get {
                return this._RecordSchemaOne;
            }
            set {
                this._RecordSchemaOne = value;
            }
        }
        public virtual object Get(int fieldPos) {
            switch (fieldPos)
			{
			case 0: return this.Id;
			case 1: return this.RecordSchemaOne;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
        }
        public virtual void Put(int fieldPos, object fieldValue) {
            switch (fieldPos)
			{
			case 0: this.Id = (System.String)fieldValue; break;
			case 1: this.RecordSchemaOne = (Devantler.DataMesh.DataProduct.Models.RecordSchemaOneWithoutReference)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("testhost", "1.11.1")]
    public partial class RecordSchemaOneWithoutReference : global::Avro.Specific.ISpecificRecord {
        public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"RecordSchemaOneWithoutReference\",\"namespace\":\"Devantler." +
                "DataMesh.DataProduct.Models\",\"fields\":[{\"name\":\"Id\",\"type\":\"string\"}]}");
        private string _Id;
        public virtual global::Avro.Schema Schema {
            get {
                return RecordSchemaOneWithoutReference._SCHEMA;
            }
        }
        public string Id {
            get {
                return this._Id;
            }
            set {
                this._Id = value;
            }
        }
        public virtual object Get(int fieldPos) {
            switch (fieldPos)
			{
			case 0: return this.Id;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
        }
        public virtual void Put(int fieldPos, object fieldValue) {
            switch (fieldPos)
			{
			case 0: this.Id = (System.String)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
        }
    }
}
