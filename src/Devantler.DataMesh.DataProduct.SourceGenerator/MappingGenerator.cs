using System.Linq;
using Devantler.DataMesh.DataProduct.Configuration;
using Devantler.DataMesh.DataProduct.SourceGenerator.Base;
using Devantler.DataMesh.DataProduct.SourceGenerator.Extensions;
using Devantler.DataMesh.DataProduct.SourceGenerator.Parsers;
using Microsoft.CodeAnalysis;
using Microsoft.Extensions.Configuration;

namespace Devantler.DataMesh.DataProduct.SourceGenerator;

[Generator]
public class MappingGenerator : GeneratorBase
{
    public override void Generate(SourceProductionContext context, Compilation compilation, IConfiguration configuration)
    {
        var schemas = configuration.GetSection("Schemas").Get<Schema[]>();
        var rootSchema = schemas.First();
        var rootNamespace = compilation.AssemblyName;
        var localNamespace = $"{rootNamespace}.Mapping";

        var source =
        $$"""
        // <auto-generated />
        using AutoMapper;
        using {{rootNamespace}}.Features.DataStores.Entities;
        using {{rootNamespace}}.Models;

        namespace {{localNamespace}};

        public class MappingProfile : Profile
        {
            public MappingProfile()
            {
                {{SchemaParser.Parse(schemas).IndentBy(4)}}
            }
        }
        
        """;



    }
}
