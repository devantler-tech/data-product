@using System.Web;

@page "/embedded-service/{Url}"

@if (string.IsNullOrEmpty(Url))
{
    <Alert Color=Color.Danger Visible>
    <AlertMessage>Invalid URL</AlertMessage>
    <AlertDescription>
        The URL you have entered for an embedded service is invalid. Please check the URL and try again.
    </AlertDescription>
</Alert>
}
else
{
    <iframe src=@HttpUtility.UrlDecode(Url) style="width:100%;height:100%;border:none;" />
}

@code {
    [Parameter]
    public string Url { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        // do the same for all params
        Url = HttpUtility.UrlDecode(Url);

        if (Uri.TryCreate(Url, UriKind.Absolute, out var uri))
        {
            if (uri.Scheme != "http" && uri.Scheme != "https")
                Url = string.Empty;
        }
        else
        {
            switch (Url)
            {
                case "swagger":
                case "graphql":
                    Url = $"/{Url}";
                    break;
                default:
                    Url = string.Empty;
                    break;
            }
        }
    }
}