@using Microsoft.Extensions.Options;
@using Devantler.DataMesh.DataProduct.Configuration.Options;
@using Devantler.DataMesh.DataProduct.Configuration.Options.FeatureFlags;
@using Devantler.DataMesh.DataProduct.Configuration.Options.SchemaRegistry;
@using Devantler.DataMesh.DataProduct.Configuration.Options.SchemaRegistry.Providers;
@using System.Web;

@inject IOptions<DataProductOptions> Options

<Bar Background=Background.Light Breakpoint="Breakpoint.Desktop" >
    <BarBrand>
        @Options.Value.Name
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To="/">Dashboard</BarLink>
            </BarItem>
            @if (Options.Value.FeatureFlags.EnableApis.Contains(ApiFeatureFlagValues.Rest))
            {
                <BarItem>
                    <BarLink To="/embedded-service/swagger">Rest API</BarLink>
                </BarItem>
            }
            @if (Options.Value.FeatureFlags.EnableApis.Contains(ApiFeatureFlagValues.GraphQL))
            {
                <BarItem>
                    <BarLink To="/embedded-service/graphql">GraphQL API</BarLink>
                </BarItem>
            }
            @if (Options.Value.FeatureFlags.EnableApis.Contains(ApiFeatureFlagValues.gRPC))
            {
                <BarItem>
                    <BarLink To="/embedded-service/grpc">gRPC</BarLink>
                </BarItem>
            }
            @foreach (var embeddedService in Options.Value.Dashboard.EmbeddedServices)
            {
                <BarItem>
                    <BarLink To="@($"/embedded-service/{HttpUtility.UrlEncode(embeddedService.Url)}")">
                        @embeddedService.Name</BarLink>
                </BarItem>
            }
        </BarStart>
        <BarEnd>
            <Text>Version <Text TextWeight=TextWeight.Bold>@Options.Value.Version</Text></Text>
        </BarEnd>
    </BarMenu>
</Bar>