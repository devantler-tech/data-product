{
    // Uses built-in ASP.NET Core logging
    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "Microsoft.AspNetCore": "Warning"
        }
    },
    "AllowedHosts": "*",
    "DataProduct": {
        "Name": "Students Data Product",
        "Description": "A data product to query and manage students and courses at SDU.",
        "Version": "v0.0.1",
        "Owner": {
            "Name": "Nikolai Emil Damm",
            "Email": "nikolaiemildamm@icloud.com",
            "Organisation": "Umbraco HQ",
            "Phone": "+45 41240202",
            "Website": "https://devantler.com"
        },
        "FeatureFlags": {
            "EnableApis": [
                "rest",
                "graphql" // only supports queries. Mutations and subscriptions are planned for later.
                //TODO: "grpc" // create a auto-generated gRPC API
            ]
            // TODO: "EnableDataIngestion": true, // Enable feature gated data ingestion with configured pub/sub
            // TODO: "EnableDataPublication": true, // Enable feature gated data publication with configured pub/sub
            // TODO: "EnableMetadataPublication": true, // Enable feature gated metadata sharing with LinkedIn DataHub
            // TODO: "EnableTracing": true, // Enable feature gated tracing with OpenTelemetry and Jaeger
            // TODO: "EnableMetrics": true, // Enable feature gated metrics with Prometheus and Grafana
            // TODO: "EnableCaching": true, // Enable feature gated caching with Redis
            // TODO: "EnableAuthentication": true, // Enable feature gated authentication with Duende IdentityServer and OpenID Connect
            // TODO: "EnableAuthorisation": true, // Enable feature gated authorisation with Duende IdentityServer and OpenID Connect
        },
        "": {
            "RestApi": {},
            "GraphQLApi": {},
            "DataStore": {
                "Type": "Relational",
                "Provider": "Sqlite",
                "ConnectionString": "Data Source=sqlite.db"
            },
            "DataSources": [
                {
                    "DataSource": {
                        "Type": "Kafka",
                        "BootstrapServers": "https://kafka.devantler.com",
                        "GroupId": "dp-students",
                        "Topic": "contoso-university"
                    }
                }
            ],
            "SchemaRegistry": {
                "Type": "Kafka", // "Local"
                "Url": "https://schema-registry.devantler.com", // "Path" is optional
                "Schema": {
                    "Subject": "contoso-university", // must match the schema subject name without (-value or -key extension), or the schema file name
                    "Version": 12
                }
            },
            "MetadataPlatform": {}
        },
        "RestApi": {},
        "GraphQLApi": {},
        "DataStore": {
            "Type": "Relational",
            "Provider": "Sqlite",
            "ConnectionString": "Data Source=sqlite.db"
        },
        "DataSources": [
            {
                "DataSource": {
                    "Type": "Kafka",
                    "BootstrapServers": "https://kafka.devantler.com",
                    "GroupId": "dp-students",
                    "Topic": "contoso-university"
                }
            }
        ],
        "SchemaRegistry": {
            "Type": "Kafka", // "Local"
            "Url": "https://schema-registry.devantler.com", // "Path" is optional
            "Schema": {
                "Subject": "contoso-university", // must match the schema subject name without (-value or -key extension), or the schema file name
                "Version": 12
            }
        },
        "MetadataPlatform": {}
    }
}
