@using System.Web;
@using Microsoft.Extensions.Options;
@using Devantler.DataProduct.Configuration.Options;
@using Devantler.Commons.StringHelpers.Extensions;

@inject IOptions<DataProductOptions> Options

@attribute [Authorize]
@page "/embedded-service/{Name?}"

@if (string.IsNullOrEmpty(Name))
{
    <Alert Color=Color.Danger Visible>
     <AlertMessage>Invalid embedded service name</AlertMessage>
    <AlertDescription>
         The embedded service name you have entered is invalid. Please check the embedded service name and try again.
    </AlertDescription>
</Alert>
}
else
{
    <iframe src=@Url style="width:100%;height:100%;border:none;" />
}

@code {
    [Parameter]
    public string Name { get; set; } = string.Empty;
    public string Url { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        switch (Name)
        {
            case "swagger":
            case "graphql":
                Url = $"{Name}/";
                break;
            default:
                foreach (var embeddedService in Options.Value.Dashboard.EmbeddedServices)
                {
                    if (embeddedService.Name.ToKebabCase() == Name)
                    {
                        Url = embeddedService.Url;
                        return;
                    }
                }
                Url = string.Empty;
                break;
        }
    }
}