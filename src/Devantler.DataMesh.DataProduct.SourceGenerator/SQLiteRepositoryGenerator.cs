using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Devantler.DataMesh.DataProduct.Configuration;
using Devantler.DataMesh.DataProduct.SourceGenerator.Base;
using Microsoft.CodeAnalysis;
using Microsoft.Extensions.Configuration;

namespace Devantler.DataMesh.DataProduct.SourceGenerator;

[Generator]
public class SQLiteRepositoryGenerator : GeneratorBase
{
    public override void Generate(SourceProductionContext context, Compilation compilation, IConfiguration configuration)
    {
        var schema = configuration.GetSection("Schemas").Get<Schema[]>().First();
        var dataStore = configuration.GetSection("Features").Get<Features>().DataStore;
        var rootNamespace = compilation.AssemblyName;
        var localNamespace = $"{rootNamespace}.Features.DataStores.SQLite";
        var className = $"{schema.Name}Repository";
        var source =
        $$"""
        // <auto-generated />
        using {{rootNamespace}}.Features.DataStores.Base;
        using {{rootNamespace}}.Features.DataStores.Entities;

        namespace {{localNamespace}};

        public class {{className}} : IRepository<{{schema.Name}}>, IRepository<{{schema.Name}}>
        {
            public {{className}}(IDbContext dbContext) : base(dbContext)
            {
            }
        }
        
        """;

    }
}
