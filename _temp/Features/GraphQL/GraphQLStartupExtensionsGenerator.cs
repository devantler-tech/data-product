// using System;
// using System.Text;
// using Devantler.DataMesh.DataProduct.SourceGenerator.Base;
// using Devantler.DataMesh.DataProduct.SourceGenerator.Extensions;
// using Devantler.DataMesh.DataProduct.SourceGenerator.DTOs;
// using Microsoft.CodeAnalysis;
// using Microsoft.CodeAnalysis.Text;

// namespace Devantler.DataMesh.DataProduct.SourceGenerator.Generators.Features.GraphQL;

// [Generator]
// public class GraphQLStartupExtensionsGenerator : GeneratorBase, IIncrementalGenerator
// {
//     public override void Generate(SourceProductionContext context, Compilation compilation, Configuration configuration)
//     {
//         if (configuration.Features.Apis.Contains("graphql") is false) return;

//         var @namespace = compilation.AssemblyName + ".Features.Apis.GraphQL";
//         var @class = GetType().Name[..^"Generator".Length];

//         var source = string.Join(Environment.NewLine,
//             "// <auto-generated />",
//             $"using {@namespace}.Queries;",
//             $"namespace {@namespace};",
//             $"public static partial class {@class}",
//             "{",
//             $"{GenerateAddFromSourceGeneratorMethod()}",
//             "}"
//         );

//         context.AddSource($"{@class}.cs", SourceText.From(source, Encoding.UTF8));

//         static object GenerateAddFromSourceGeneratorMethod()
//         {
//             return string.Join(Environment.NewLine,
//                 $"static partial void AddFromSourceGenerator(IServiceCollection services){{".IndentBy(4),
//                 $"    services.AddGraphQLServer().AddQueryType<Query>();".IndentBy(4),
//                 $"}}".IndentBy(4)
//             );
//         }
//     }
// }
