using System;
using System.Linq;
using System.Text;
using Devantler.DataMesh.DataProduct.SourceGenerators.Base;
using Devantler.DataMesh.DataProduct.SourceGenerators.Extensions;
using Devantler.DataMesh.DataProduct.SourceGenerators.Models;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;

namespace Devantler.DataMesh.DataProduct.SourceGenerators.Generators.Clients.DatabaseClients;

[Generator]
public class DatabaseClientsStartupExtensionsGenerator : GeneratorBase, IIncrementalGenerator
{
    public override void Generate(SourceProductionContext context, Compilation compilation, Configuration configuration)
    {
        var @assemblyNamespace = compilation.AssemblyName;
        var @namespace = compilation.AssemblyName + ".Clients.DatabaseClients";
        var @class = GetType().Name[..^"Generator".Length];
        var source = string.Join(Environment.NewLine,
            "// <auto-generated />",
            $"using {assemblyNamespace}.Models;",
            $"using Dapr.Client;",
            $"namespace {@namespace};",
            "public static partial class DatabaseClientsStartupExtensions",
            "{",
            GenerateAddDatabaseClientFromSourceOutputMethod(configuration.Features.Database, configuration.Schemas.First().Name).IndentBy(4),
            "}"
        );

        context.AddSource($"{@class}.cs", SourceText.From(source, Encoding.UTF8));

        static string GenerateAddDatabaseClientFromSourceOutputMethod(Database database, string schemaName)
        {
            return string.Join(Environment.NewLine,
                "static partial void AddDatabaseClientFromSourceOutput(IServiceCollection services, IConfiguration configuration){",
                AddDatabaseServiceClient(database, schemaName).IndentBy(4),
                "}"
              );

            static string AddDatabaseServiceClient(Database database, string schemaName)
            {
                return string.Join(Environment.NewLine,
                    $"services.AddSingleton<IDatabaseServiceClient<{schemaName}>, DatabaseServiceClient<{schemaName}>>(",
                    $"    _ => new DatabaseServiceClient<{schemaName}>(DaprClient.CreateInvokeHttpClient(\"{database.ToString().ToLower()}\"))",
                    ");"
                );
            }
        }
    }
}
