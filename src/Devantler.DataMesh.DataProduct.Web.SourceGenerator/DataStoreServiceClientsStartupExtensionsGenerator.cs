using System;
using System.Linq;
using System.Text;
using Devantler.DataMesh.DataProduct.Configuration;
using Devantler.DataMesh.DataProduct.Core.SourceGenerator;
using Devantler.SourceGenerator.Core;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;
using Microsoft.Extensions.Configuration;

namespace Devantler.DataMesh.DataProduct.Web.SourceGenerator;

[Generator]
public class DataStoreServiceClientsStartupExtensionsGenerator : GeneratorBase
{
    public override void Generate(SourceProductionContext context, Compilation compilation, IConfiguration configuration)
    {
        var features = configuration.GetSection("Features").Get<Features>();
        var schemas = configuration.GetSection("Schemas").Get<Schema[]>();
        var coreAssembly = compilation.AssemblyName[..^".Web".Length] + ".Core";
        var @namespace = compilation.AssemblyName + ".Features.Clients.DataStoreServiceClients";
        var @class = GetType().Name[..^"Generator".Length];
        var source = string.Join(Environment.NewLine,
            "// <auto-generated />",
            $"using {coreAssembly}.Models;",
            $"using Dapr.Client;",
            $"namespace {@namespace};",
            "public static partial class DataStoreServiceClientsStartupExtensions",
            "{",
            GenerateAddDataStoreClientFromSourceOutputMethod(features.DataStore, schemas.First().Name).IndentBy(4),
            "}"
        );

        context.AddSource($"{@class}.cs", SourceText.From(source, Encoding.UTF8));

        static string GenerateAddDataStoreClientFromSourceOutputMethod(DataStore database, string schemaName)
        {
            return string.Join(Environment.NewLine,
                "static partial void AddDataStoreServiceClientFromSourceOutput(IServiceCollection services, IConfiguration configuration){",
                AddDataStoreServiceClient(database, schemaName).IndentBy(4),
                "}"
              );

            static string AddDataStoreServiceClient(DataStore database, string schemaName)
            {
                return string.Join(Environment.NewLine,
                    $"services.AddSingleton<IDataStoreServiceClient<{schemaName}>, {database}ServiceClient<{schemaName}>>(",
                    $"    _ => new {database}ServiceClient<{schemaName}>(DaprClient.CreateInvokeHttpClient(\"{database.ToString().ToLower()}\"))",
                    ");"
                );
            }
        }
    }
}
